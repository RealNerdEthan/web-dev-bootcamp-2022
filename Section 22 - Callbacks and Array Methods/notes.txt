This section is all about built-in array methods that require us to pass in functions. It's a crucial part of working with arrays
in JavaScript and arrays are crucial to working with JavaScript, so the topic is important.

-forEach
-map
-filter
-find
-reduce (less important than the others)
-some
-every

---For Each---
Accepts a callback function. Calls the function once per element in an array. They are also older and there are times you could
substitute these for newer syntax.

---Map---
Creates a new array with the results of calling a callback on every element in the array. Works very much for forEach but then
generates a new array based on the result.

---Arrow Functions---
Allows us to write functions without having to use the keyword "function".

---setTimeout and setInterval---
Two functions that expect you to pass a callback function in, but are not array methods. They delay/postpone code execution for a
later time.

---Filter Method---
Creates a new array with all elements that pass the test implemented by the provided function. Typically we pass in a function
that needs to return true or false and for any element that returns true it gets added into the new filtered array that is created.

---Some---
Returns true if any of the array elements pass the test function.

---Every---
Tests whether all elements in the array pass the test function, and if so will return true.

---Some and Every---
Will always return true or false (never returns a new array) and are ways to test an array.

---Reduce Method---
Executes a reducer method function on each element of the array, resulting in a single value. This could be via math, but also could
be via compairison of values which could be in an array or part of an object.

---Arrow Functions and This---
The keyword "this" works very differently inside an arrow function. Inside an arrow function, the keyword "this" is just going to
refer to the scope that it was created in. Typically it will refer to the window object. You usually wouldn't use an arrow function to define
a method.